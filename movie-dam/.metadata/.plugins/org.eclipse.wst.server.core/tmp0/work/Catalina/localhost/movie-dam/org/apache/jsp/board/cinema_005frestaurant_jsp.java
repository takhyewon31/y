/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2018-10-19 12:49:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.ArrayList;
import moviedam.board.CommentRestDBBean;
import moviedam.board.CommentRestDataBean;
import moviedam.board.RestaurantDBBean;
import moviedam.board.RestaurantDataBean;

public final class cinema_005frestaurant_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


    int pageSize = 9;
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/_server/movie-dam/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/movie-dam/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1090214156000L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1539818326000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("moviedam.board.RestaurantDataBean");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("moviedam.board.CommentRestDataBean");
    _jspx_imports_classes.add("moviedam.board.CommentRestDBBean");
    _jspx_imports_classes.add("moviedam.board.RestaurantDBBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("    \n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

	request.setCharacterEncoding("utf-8");
	String title = "영화관 맛집";
	String pageNum = request.getParameter("pageNum");
    String option = request.getParameter("option");
    String search = request.getParameter("search");

      out.write('\n');
      out.write('\n');

	if (pageNum == null) {
		pageNum = "1";
	}

	int currentPage = Integer.parseInt(pageNum);
	int startRow = (currentPage - 1) * pageSize + 1;
	int endRow = currentPage * pageSize;
	int count = 0;
	int ccount = 0;
	int number = 0;
	int total_page = 0;
	List<RestaurantDataBean> articleList = null; 
    
	try {
	RestaurantDBBean restaurant_db = RestaurantDBBean.getInstance();
    
    ArrayList<CommentRestDataBean> commentList = null;
	CommentRestDBBean comment_db = CommentRestDBBean.getInstance();
	
  	count = restaurant_db.getArticleCount(); 
    if (count > 0) {
       	articleList = restaurant_db.getArticles(startRow, endRow, option, search);
	}  
    
	number = count-(currentPage-1)*pageSize;

      out.write('\n');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/module/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(title), request.getCharacterEncoding()), out, false);
      out.write('\n');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/module/nav.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<!-- ***** Breadcumb Area Start ***** -->\n");
      out.write("<div class=\"breadcumb-area bg-img bg-overlay\" style=\"background-image: url(/movie-dam/assets/img/bg-img/hero-1.jpg)\"></div>\n");
      out.write("<!-- ***** Breadcumb Area End ***** -->\n");
      out.write("\n");
      out.write("<section class=\"dorne-single-listing-area section-padding-100\">\n");
      out.write("<div class=\"container\">\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"col-12\">\n");
      out.write("\t\t    <div class=\"section-heading dark text-center\">\n");
      out.write("\t\t    \t<span></span>\n");
      out.write("\t\t\t\t<h4>Cinema restaurant</h4>\n");
      out.write("\t\t\t\t<p>검색된 글 : ");
      out.print(count);
      out.write("개</p>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<a class=\"btn btn-sm btn-outline-secondary\" href=\"writeForm.jsp?board_id=2&article_writer=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" role=\"button\" >글쓰기</a>\n");
      out.write("\t<div class=\"row justify-content-center\">\n");
      out.write("\t\t<div class=\"col-12\">\n");
      out.write("\t\t\t<form>\n");
      out.write("\t\t\t\t<label class=\"control-label\">게시글 검색</label>\n");
      out.write("\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\t<div class=\"input-group mb-3\">\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group-prepend\">\n");
      out.write("\t\t\t\t\t\t\t<select class=\"form-control\" name=\"option\">\n");
      out.write("\t\t\t\t\t\t        <option value=\"all\">전체글</option>\n");
      out.write("\t\t\t\t\t\t        <option value=\"article_title\">제목</option>\n");
      out.write("\t\t\t\t\t\t        <option value=\"article_content\">내용</option>\n");
      out.write("\t\t\t\t\t\t        <option value=\"article_writer\">작성자</option>\n");
      out.write("\t\t\t\t\t        </select>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" name=\"search\" placeholder=\"궁금한 것을 검색해보세요\">\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group-append\">\n");
      out.write("\t\t\t\t\t\t\t<input class=\"btn btn-outline-secondary\" type=\"submit\" value=\"검색\"> \n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\t\t\n");
 if (count == 0) { 
      out.write("\n");
      out.write("\n");
      out.write("\t<div class=\"alert alert-danger\" role=\"alert\">\n");
      out.write("\t  게시판에 저장된 글이 없습니다.\n");
      out.write("\t</div>\n");
      out.write("\n");
 } else {
      out.write("\n");
      out.write("\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\n");
      out.write("\t");
  
		int a = count / pageSize + (count % pageSize == 0 ? 0 : 1); //전체페이지 수 
		
		if(Integer.parseInt(pageNum) > a){ 
      out.write("\n");
      out.write("\t\t\t");
      if (true) {
        _jspx_page_context.forward("error.jsp");
        return;
      }
      out.write('\n');
      out.write('	');
      out.write('	');
 }
		
	   for (int i = 0 ; i < articleList.size() ; i++) {
		  RestaurantDataBean article = articleList.get(i);
		   
	       ccount = comment_db.getCommentCount(article.getArticle_id());
	
      out.write("\n");
      out.write("\t\t\t<div class=\"col-12 col-sm-6 col-lg-4\">\n");
      out.write("\t\t\t\t<div class=\"single-features-area mb-50\">\n");
      out.write("\t\t\t\t\t<a href=\"content_rest.jsp?article_id=");
      out.print(article.getArticle_id());
      out.write("&pageNum=");
      out.print(currentPage);
      out.write("&board_id=2\"><img style=\"width:100%; height:250px; display:block;\" src=\"/movie-dam/imageFolder/cinema_restaurant/");
      out.print(article.getArticle_file());
      out.write("\" alt=\"저장된 사진이 없습니다.\"></a>\n");
      out.write("\t\t\t\t\t<div class=\"feature-content d-flex align-items-center justify-content-between\">\n");
      out.write("\t\t\t\t\t<div class=\"feature-title\"><h5><a href=\"content_rest.jsp?article_id=");
      out.print(article.getArticle_id());
      out.write("&pageNum=");
      out.print(currentPage);
      out.write("&board_id=2\">");
      out.print(number--);
      out.write(')');
      out.write(' ');
      out.print(article.getArticle_title());
      out.write("<small>(");
      out.print(ccount);
      out.write(")</small></a></h5>\n");
      out.write("\t\t\t\t\t\t<p>글쓴이 | ");
      out.print(article.getArticle_writer() );
      out.write("</p>\n");
      out.write("\t\t\t\t\t\t<p>작성일 | ");
      out.print(sdf.format(article.getReg_date()));
      out.write("</p>\n");
      out.write("\t\t\t\t\t\t<div class=\"feature-favourite\"><a href=\"#\"><i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i></a></div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t");
	} 
      out.write("\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\t\t\n");
}
      out.write("\n");
      out.write("\n");
      out.write("<nav aria-label=\"Page navigation\">\n");
      out.write("\t<ul class=\"pagination justify-content-center\">\n");

    if (count > 0) {
    	//전체 페이지수 구하기//50개=>5페이지, 51~59개=>6페이지
        int pageCount = count / pageSize + (count % pageSize == 0 ? 0 : 1);
        
    	if(pageCount < currentPage){
    		currentPage = pageCount;
    	}
       	//한 페이지에 보여지는 시작페이지 구하기
		int startPage =1;
		
		if(currentPage % 10 != 0)
           startPage = (int)(currentPage/10)*10 + 1;
		else
           startPage = ((int)(currentPage/10)-1)*10 + 1; 
           
        int pageBlock = 10; //한 페이지에 보여줄 페이지수 설정
        
		//한 페이지에 보여지는 끝페이지 구하기
		int endPage = startPage + pageBlock - 1;
        if (endPage > pageCount) {
        	endPage = pageCount; 
        } 
        
        
        if (startPage > 10) { 
      out.write("\n");
      out.write("    \t<li class=\"page-item\"><a class=\"page-link\" href=\"cinema_restaurant.jsp?pageNum=");
      out.print(startPage - 10 );
      out.write("\">이전</a></li>\n");
      }
    
    for (int i = startPage ; i <= endPage ; i++) {
    	if(i == currentPage) {

      out.write("\n");
      out.write("\t\t<li class=\"page-item active\">\n");
      out.write("\t      <a class=\"page-link\" href=\"cinema_restaurant.jsp?pageNum=");
      out.print(i );
      out.write('"');
      out.write('>');
      out.print(i );
      out.write(" <span class=\"sr-only\">(current)</span></a>\n");
      out.write("\t    </li>\n");
        		
    	} else {

      out.write("\t\n");
      out.write("\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"cinema_restaurant.jsp?pageNum=");
      out.print(i );
      out.write('"');
      out.write('>');
      out.print(i );
      out.write("</a></li>\n");
        		
    	}
  }
    
    if (endPage < pageCount) {  
      out.write("\n");
      out.write("    \t<li class=\"page-item\"><a class=\"page-link\" href=\"cinema_restaurant.jsp?pageNum=");
      out.print(startPage + 10 );
      out.write("\">다음</a></li>\n");

    }
}

      out.write("\n");
      out.write("\t</ul>\n");
      out.write("</nav>\n");

} catch (Exception e) { }
 
      out.write("\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("</section>\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/module/footer.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
