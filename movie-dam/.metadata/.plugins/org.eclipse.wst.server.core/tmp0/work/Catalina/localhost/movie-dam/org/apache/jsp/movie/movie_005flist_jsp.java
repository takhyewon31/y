/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2018-10-19 12:52:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.movie;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class movie_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

	request.setCharacterEncoding("utf-8");
	String title = "영화 목록";
	String resultPage = request.getParameter("resultPage");
	if (resultPage == null || resultPage.length() == 0) {
		resultPage = "1";
	}
	String sort = request.getParameter("sort");
	if (sort == null || sort.length() == 0) {
		sort = "vote_count";
	}
	String with_genres = request.getParameter("with_genres");
	if (with_genres == null || with_genres.length() == 0) {
		with_genres = "";
	}
	String api_key = "9dd279523f7113a4103a8f1e9ef6abe3";

      out.write('\n');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/module/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(title), request.getCharacterEncoding()), out, false);
      out.write('\n');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/module/nav.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<!-- ***** Breadcumb Area Start ***** -->\n");
      out.write("<div class=\"breadcumb-area bg-img bg-overlay\" style=\"background-image: url(/movie-dam/assets/img/bg-img/hero-1.jpg)\"></div>\n");
      out.write("<!-- ***** Breadcumb Area End ***** -->\n");
      out.write("\n");
      out.write("<!-- ***** Listing Destinations Area Start ***** -->\n");
      out.write("<section class=\"dorne-listing-destinations-area section-padding-100-50\">\n");
      out.write("<div class=\"container\">\n");
      out.write("\t<div class=\"row\">\n");
      out.write("        <div class=\"col-12\">\n");
      out.write("            <div class=\"section-heading dark text-center\">\n");
      out.write("                <span></span>\n");
      out.write("                <h4>Movie list</h4>\n");
      out.write("                <p id=\"lead\"></p>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\t\n");
      out.write("\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"dropdown\">\n");
      out.write("\t\t\t<button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownGenre\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("\t\t    \t장르\n");
      out.write("\t\t\t</button>\n");
      out.write("\t  \t\t<div class=\"dropdown-menu\" aria-labelledby=\"dropdownGenre\" id=\"dropdownGenreList\">\n");
      out.write("\t  \t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<div class=\"dropdown\">\n");
      out.write("\t\t\t<button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownSort\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n");
      out.write("\t\t\t\t정렬\n");
      out.write("\t\t  \t</button>\n");
      out.write("\t\t  \t<div class=\"dropdown-menu\" aria-labelledby=\"dropdownSort\">\n");
      out.write("\t\t    \t<a class=\"dropdown-item\" href=\"movie_list.jsp?resultPage=1&sort=vote_count\">인기순</a>\n");
      out.write("\t\t\t\t<a class=\"dropdown-item\" href=\"movie_list.jsp?resultPage=1&sort=release_date\">최근 개봉순</a>\n");
      out.write("\t\t\t\t<a class=\"dropdown-item\" href=\"movie_list.jsp?resultPage=1&sort=revenue\">최고 흥행순</a>\n");
      out.write("\t\t  \t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<div class=\"row\" id=\"showMovieList\">\n");
      out.write("\t\t\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<!-- Pagination -->\n");
      out.write("\t<div>\n");
      out.write("\t\t<ul class=\"pagination\">\n");
      out.write("\t\t\t<li class=\"page-item disabled\"><a class=\"page-link\" href=\"#\">&laquo;</a>\n");
      out.write("\t\t\t</li>\n");
      out.write("\t\t\t<li class=\"page-item active\"><a class=\"page-link\" href=\"movie_list.jsp?resultPage=1&sort=");
      out.print(sort);
      out.write("&with_genres=");
      out.print(with_genres);
      out.write("\">1</a>\n");
      out.write("\t\t\t</li>\n");
      out.write("\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"movie_list.jsp?resultPage=2&sort=");
      out.print(sort);
      out.write("&with_genres=");
      out.print(with_genres);
      out.write("\">2</a></li>\n");
      out.write("\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"movie_list.jsp?resultPage=3&sort=");
      out.print(sort);
      out.write("&with_genres=");
      out.print(with_genres);
      out.write("\">3</a></li>\n");
      out.write("\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"movie_list.jsp?resultPage=4&sort=");
      out.print(sort);
      out.write("&with_genres=");
      out.print(with_genres);
      out.write("\">4</a></li>\n");
      out.write("\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"movie_list.jsp?resultPage=5&sort=");
      out.print(sort);
      out.write("&with_genres=");
      out.print(with_genres);
      out.write("\">5</a></li>\n");
      out.write("\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"#\">&raquo;</a>\n");
      out.write("\t\t\t</li>\n");
      out.write("\t\t</ul>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("</section>\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/module/footer.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("var page = '");
      out.print(resultPage);
      out.write("';\n");
      out.write("var sort = '");
      out.print(sort);
      out.write("';\n");
      out.write("var genre = '");
      out.print(with_genres);
      out.write("';\n");
      out.write("var api_key = '");
      out.print(api_key);
      out.write("';\n");
      out.write("var response2 = [];\n");
      out.write("\n");
      out.write("\n");
      out.write("$(document).ready(function() {\n");
      out.write("\tvar rs = [];\n");
      out.write("\tvar settings = {\n");
      out.write("\t  \tasync: true,\n");
      out.write("\t  \tcrossDomain: true,\n");
      out.write("\t  \turl: 'https://api.themoviedb.org/3/discover/movie',\n");
      out.write("\t\tmethod: 'GET',\n");
      out.write("\t  \tdata: {\n");
      out.write("\t\t\t'page': page,\n");
      out.write("\t\t  \t'include_video': 'false',\n");
      out.write("\t\t  \t'include_adult': 'false',\n");
      out.write("\t\t  \t'sort_by': sort+'.desc',\n");
      out.write("\t\t  \t'region': 'KR',\n");
      out.write("\t\t  \t'language': 'ko-KR',\n");
      out.write("\t\t  \t'with_genres': genre, \n");
      out.write("\t\t  \t'api_key': '9dd279523f7113a4103a8f1e9ef6abe3'\n");
      out.write("\t  \t},\n");
      out.write("\t  \tdataType: 'json',\n");
      out.write("\t  \theaders: {}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t$.ajax(settings).done(function (response) {\n");
      out.write("\t\tconsole.log(response);\n");
      out.write("  \t\t$('#lead').html('총 '+response.total_results+'개의 작품 검색');\n");
      out.write("  \t\t\n");
      out.write("  \t\tvar settings2 = {\n");
      out.write("\t\t  async: true,\n");
      out.write("\t\t  crossDomain: true,\n");
      out.write("\t\t  url: 'https://api.themoviedb.org/3/genre/movie/list',\n");
      out.write("\t\t  method: 'GET',\n");
      out.write("\t\t  headers: {},\n");
      out.write("\t\t  data: {\n");
      out.write("\t\t\t  'language': 'ko-KR',\n");
      out.write("\t\t\t  'api_key': api_key\n");
      out.write("\t\t  },\n");
      out.write("\t\t  dataTypa: 'json'\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\t$.ajax(settings2).done(function (response2) {\n");
      out.write("\t\t  \tconsole.log(response2);\n");
      out.write("\t\t\tvar rs2 = [];\n");
      out.write("\t\t\trs2.push('<a class=\"dropdown-item\" href=\"movie_list.jsp\">전체</a>');\n");
      out.write("\t\t  \tfor(var i=0; i<response2['genres'].length; i++) {\n");
      out.write("\t\t  \t\trs2.push('<a class=\"dropdown-item\" href=\"movie_list.jsp?resultPage='+page+'&sort='+sort+'&with_genres='+response2['genres'][i].id+'\">'+response2['genres'][i].name+'</a>');\n");
      out.write("\t\t  \t}\n");
      out.write("\t\t  \t$('#dropdownGenreList').html(rs2.join(''));\n");
      out.write("\t\t  \n");
      out.write("\t\t  \tfunction getGenreName(genre_ids) {\n");
      out.write("\t\t\t\tvar genreName = [];\n");
      out.write("\t\t\t\tfor(var i=0; i<genre_ids.length; i++) {\n");
      out.write("\t\t\t\t\tfor(var j=0; j<response2['genres'].length; j++) {\n");
      out.write("\t\t\t\t\t\tif(response2['genres'][j].id == genre_ids[i]) {\n");
      out.write("\t\t\t\t\t\t\tgenreName.push(response2['genres'][j].name);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\treturn genreName;\n");
      out.write("\t\t\t}\n");
      out.write("  \n");
      out.write("\t  \t\tfor(var i=0; i<response['results'].length; i++) {\n");
      out.write("\t  \t\t\trs.push('<div class=\"col-12 col-sm-6 col-lg-4\">');\n");
      out.write("\t  \t\t\trs.push('<div class=\"single-features-area mb-50\">');\n");
      out.write("\t  \t\t\tif(response['results'][i]['poster_path'] == null) {\n");
      out.write("\t  \t\t  \t\trs.push('<a href=\"movie_detail.jsp?id='+response['results'][i]['id']+'\"><img style=\"width: 100%; display: block;\" src=\"https://via.placeholder.com/350x500?text=dont+find+poster\" alt=\"Card image\"></a>');\n");
      out.write("\t  \t\t\t} else {\n");
      out.write("\t  \t\t  \t\trs.push('<a href=\"movie_detail.jsp?id='+response['results'][i]['id']+'\"><img style=\"width: 100%; display: block;\" src=\"https://image.tmdb.org/t/p/original'+response['results'][i]['poster_path']+'\" alt=\"Card image\"></a>');\n");
      out.write("\t  \t\t\t}\n");
      out.write("\t  \t\t\trs.push('<div class=\"feature-content d-flex align-items-center justify-content-between\">');\n");
      out.write("\t  \t\t\trs.push('<div class=\"feature-title\"><h5>'+response['results'][i]['title']+'</h5>');\n");
      out.write("\t  \t\t\trs.push('<p>장르 | '+getGenreName(response['results'][i]['genre_ids'])+'</p>');\n");
      out.write("\t  \t\t\trs.push('<p>개봉일 | '+response['results'][i]['release_date']+'</p></div>');\n");
      out.write("\t\t\t\trs.push('<div class=\"feature-favourite\"><a href=\"#\"><i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i></a></div>');\n");
      out.write("\t\t\t\trs.push('</div></div></div>');\n");
      out.write("\t  \t\t}\n");
      out.write("  \t  \t\t$('#showMovieList').html(rs.join(''));\n");
      out.write("\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
