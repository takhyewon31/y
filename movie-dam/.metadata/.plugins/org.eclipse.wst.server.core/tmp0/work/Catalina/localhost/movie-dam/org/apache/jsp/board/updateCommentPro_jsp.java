/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.53
 * Generated at: 2018-10-19 12:24:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import moviedam.board.CommentDBBean;
import moviedam.board.CommentDataBean;
import moviedam.board.CommentRestDBBean;
import moviedam.board.CommentRestDataBean;

public final class updateCommentPro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("moviedam.board.CommentDataBean");
    _jspx_imports_classes.add("moviedam.board.CommentRestDataBean");
    _jspx_imports_classes.add("moviedam.board.CommentRestDBBean");
    _jspx_imports_classes.add("moviedam.board.CommentDBBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
 request.setCharacterEncoding("utf-8");
      out.write('\n');
      out.write('\n');
      moviedam.board.CommentDataBean cmtdto = null;
      cmtdto = (moviedam.board.CommentDataBean) _jspx_page_context.getAttribute("cmtdto", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (cmtdto == null){
        cmtdto = new moviedam.board.CommentDataBean();
        _jspx_page_context.setAttribute("cmtdto", cmtdto, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("cmtdto"), request);
      out.write('\n');
      moviedam.board.CommentRestDataBean cmtrestdto = null;
      cmtrestdto = (moviedam.board.CommentRestDataBean) _jspx_page_context.getAttribute("cmtrestdto", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (cmtrestdto == null){
        cmtrestdto = new moviedam.board.CommentRestDataBean();
        _jspx_page_context.setAttribute("cmtrestdto", cmtrestdto, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("cmtrestdto"), request);
      out.write('\n');

	int article_id = Integer.parseInt(request.getParameter("cmt_ref"));
	String pageNum = request.getParameter("pageNum");
	int board_id = Integer.parseInt(request.getParameter("board_id"));
	String category = request.getParameter("category")==null ? "" : request.getParameter("category");
	int check = 0;
	
	if(category.equals("") || category == null) {
		CommentRestDBBean dbPro = CommentRestDBBean.getInstance();
	    check = dbPro.updateComment(cmtrestdto); 
	} else {
		CommentDBBean dbPro = CommentDBBean.getInstance();
	    check = dbPro.updateComment(cmtdto); 
	}

    if(check==1){
    	if(category.equals("") || category == null) {

      out.write("\n");
      out.write("    \t\t<meta http-equiv=\"Refresh\" content=\"0;url=content_rest.jsp?article_id=");
      out.print(article_id);
      out.write("&pageNum=");
      out.print(pageNum);
      out.write("&board_id=");
      out.print(board_id);
      out.write('"');
      out.write('>');
      out.write('\n');
		} else { 
      out.write("\n");
      out.write("    \t\t<meta http-equiv=\"Refresh\" content=\"0;url=content.jsp?article_id=");
      out.print(article_id);
      out.write("&pageNum=");
      out.print(pageNum);
      out.write("&board_id=");
      out.print(board_id);
      out.write("&category=");
      out.print(category);
      out.write('"');
      out.write('>');
      out.write('\n');
  	} 
 	} else { 
      out.write("\n");
      out.write("    \t<script>      \n");
      out.write("\t\t\talert(\"수정을 실패하였습니다.\");\n");
      out.write("\t\t\thistory.go(-1);\n");
      out.write("   \t\t</script>\n");
	} 
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
